# def hello(name, word):
#     print('Hello, ' + name + '. Say ' + word)
#
# hello('John', 'hi')
# hello('Katy', 'hello')


# def get_sum(a, b):
#     print(a + b)


# x = 2
# y = 5
# get_sum(1, 3)
# get_sum(x, y)

# print(len('Hello'))

# def get_sum(a, b):
#     return a + b
#
# print(get_sum(1, 2))

# def hi():
#     print('Hi')
#
# hi()




# def set_register(s):
#     if ' ' in s:
#         return s.upper()
#     else:
#         return s.lower()
#
# print(set_register('Hello world'))
# print(set_register('Hello,world'))


# def get_sum(a=0, b=0, c=0, d=1):
#     return a + b + c + d
#
#
# print(get_sum(1, 2, d=5))


# def get_sum(*args):  # *args создаёт tuple, аргс это переменная, тоже пиши как хочешь
#     return sum(args) # функция ссумирует переменные 
#
#
# print(get_sum(1, 5, 10))


# def func(**kwargs): # создаёт dict, кваргс *"key word argunents"* = kwargs это переменная, тоже пиши как хочешь
#     print(kwargs)
#
# func(a=1, b=5, c=20)


def f(a, x, *args, **kwargs):
    print(a)
    print(x)
    print(args)
    print(kwargs)


f(1, 2, 3, 4, b='test', c='hi')
f(1, 2)






def get_sum(a, b):
    """
    Возращает сумму аргументов a и b.

    :param a: Первый операнд
    :type a: int
    :param b: Второй операнд
    :type b: int
    :return: Return type int
    """
    return a + b


# print(get_sum(1, 2))

# a = 5 # global

# def f():
#     a = 10 # local
#     a += 1
#     print(a)
#
# print(a)
# f()
# print(a)

# def f():
#     global a
#     a += 1
#     print(a)
#
# print(a)
# f()
# print(a)


l = [1, '2', 3]

def f(l):
    return [i * 2 for i in l]

print(f(l))


def f2(l):
    def get_mult(x):
        return int(x) * 2
    return [get_mult(i) for i in l]

print(f2(l))


def f3(l):
    def get_mult(x):
        if isinstance(x, int):
            return x * 2
    return [get_mult(i) for i in l if get_mult(i)]

print(f3(l))


def f4(l):
    def get_mult(x):
        return x * 2
    return list(map(get_mult, l))

print(f4(l))

