udef this is ex Devfs

montage in /dev

mem					fisical memory PC
null					null
pts/					psevdoterminals
urandom					generator couter
sdx					block 
tty					apparat terminal



Sysfs

/sys

devices/
bus/
drivers/
block/
class/


Procfs

/proc

PID/
cpuinfo/
devices/
mounts/
sys/



whoami				#
hostname			
date				# date
uname				# sys name
passwd				# change pass
touch			
last

whoami --help
hostname  --help | less		# show in new window



#############################################################################

					man

SECTIONS

 1. Executable programs or shell commands				# user command
 2. System calls (functions provided by the kernel)
 3. Library calls (functions within program libraries)
 4. Special files (usually found in /dev)				# devices
 5. File formats and conventions eg /etc/passwd				# config files
 6. Games
 7. Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)

 8. System administration commands (usually only for root)		# sysadmin command
 9. Kernel routines [Non standard]


man 8 useradd						# info about how sysadmin(8) add user

man -a passwd						# info -a (all) about pass


man -k user						# info about all command whith "user"

man -k user | grep 8					# "grep 8" all command from sysadmin

work just in sentOS su -				# password and you are on "root mode" # after to exit write exit


apropos user 						# same like "man -k user"

################################################################################################

					--help

passwd --help						# show shortly info how to use this command

#############################################################################################


bash tab conpletion					# 2 click TAB if you want info about command

history 


redirection
						
# STBIN(input, your keybord)	<  	# use maus or keybord
# STBOUT(out)			> >> 	# overwriting to > and append to >>
# STBERR(err)			2> 	# to send error to 


piping it is "|"

ls | less				 # ls will be filtred with less

ps aux | grep httpd			# show all process and filtred by grep (with word httpd)



ls > listfile				# STBOUT redirect your command to file

find /proc -name "cpu*" 2>/dev/null	# redirect all error to null device

man -k user | wc			# wc -how many 'lines' 'words' 'literal'


history					# history of your all command


###################################################################################################

				bash shell scripts

echo who > myscript
echo ls >> myskript
cat myskript
chmod +x myscript
./myscript

#####################################################################################################

man hier				

#################################################################################################
					LS list
ls --help
ls
ls -l		# long
ls -a		# show all files, included hide files
ls -la
ll
ls -lrt		# sort by time
ls -l /etc
ls -ld /etc	# dir	

#################################################################################################

					globbing	

*					# ls a* any character (all command beginimg with a)
?					# ls ca? 3 character, first second ca and third ? 
[a-b]					# ls ca[bt] it is or b or r, [b-t] from b to t

ls [a-d]??* 

ls -d a*    				# ls any directory with name a*
ls -d a????*				# ls any dir with a* minimum literals a+(4?) and maybe more
ls -d a[dn]*				# ls dir a+[d or n] + any
ls -R					# that is inside

#################################################################################################


					cp - copy

cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...


cp --help

sudo cp /etc/hosts .

cp /etc/hosts ~/files/			# ~/files/  have to be with / closed, or it will be not directory, it's will be file

sudo rm -rf tmp


###################################################################################################


mkdir date				# make dir

mkdir -p file/data			# -p path (with out does not work)

mkdir -p photos/2017			# same

rmdir date				# it's works just wen it' empty

rm -rf

####################################################################################################

				Absolute and Relative Paths

/tmp/data/files/pete				# absolute path

################################################################################################

					moving files with mv

mv testfile anotherfile				# rename

mv /tmp/testfile ~				# move to the home directory

############################################################################################

					remove


rm anotherfile				# remove files
rm -r etc				# remove directory this question 
rm -rf etc				# with out question
rm -- -myfile				# if you want to remove file with "-" you have to write --

###############################################################################################

					Link

link 
-hard link
-symbolic link


ln /etc/hosts myhosts				# create hard link
ls -il /etc/hosts myhosts			# show inote number(file id) and more info
echo hallo >> myhosts				# add in file hallo
ls -il						# show both files is changed


ln -s myhosts symhosts				# create soft link
ls -il /etc/hosts myhosts symhosts		# what is differences

ln -s /etc etc
rm etc						# they ask to remove sombolic link

###############################################################################################

					find							

find /etc -name hosts					# find name host

find /etc -name "*hosts*"				# words with name *hosts*	

find / -user "marat"					# 

man find						# 


find /etc -name "*hosts*" -exec cp {} find/names \;	# find in etc name host -exec it is do -> what do? cp {} find/names



find /etc -size +100k -exec cp {} find/size \;

-size n[cwbkMG]
              
              suffixes can be used:
              `b'    for 512-byte blocks 
              `c'    for bytes
              `w'    for two-byte words
              `k'    for Kibibytes 
              `M'    for  Mebibytes  
              `G'    for Gibibytes 


find /etc -exec grep -l marat {} \; 2>/dev/null


find /etc -exec grep -l marat {} \; -exec cp {} find/contents/ \; 2>/dev/null


find /etc -name "[ab]*" -exec cp {} tmp/files/ \;

find tmp/files -name "c*" -exec mv {} tmp/files/photos \;

find /etc -size -1000c -exec cp {} tmp/files/pictures/ \; 2>/dev/null

ln -s var tmp/files/

###############################################################################


				VIM - VI

command mode
input mode

how to start vi -> inputmode

i		# inputmode
o		# open new line
O		# open a new line above the position
[Ins] tap on keybord -> like i
a		# append after position



g 		# top of the document
G		# bottom of the document
pgd		# page down 
pgu		# page up

/yourtext	# find some text
n		# next, find ->
N		# find oposit direction
:300		# go to number 300 of line
v


p

how to start vi -> commandmode

Esc
:ZZ 		# save your text
:wq!		# save your text "write quit"


work with text:

v		# visual (marking text)
d		# delete
y		# yank -> copy
p		# past

u		# undo (memory and you can go back <-)
Ctrl-R		# redo ( go front wenn you go to far with undo)

dd		# delete line
x		# delete character
gg 		# go to begining of the text
G		# go on the end

d$		# delete from your position all line on right site

d^		# delete from your pos all line on the left site 

:%s/drei/ZOPA/g	# change all words drei on ZOPA # with out g just first

################################################################

				less


less /var/log/auth.log

/root		# find root in this document. and use n for next "root"

g		# to go on the TOP of the document
G		# go to bottom


#################################################################

				cat and tac


cat print file on terminal
tac print file on the terminal back

##############################################################

			tail and head

tail -n 5 /etx/passwd		# show last 5 lines off document

head -n 5 /etc/passwd		# show first 5 lines


wen you want just 4 line from document

head -n 4 /etc/passwd | tail -n 1

##########################################################################
			grep

ps aux | grep cron | grep -v grep	# show all procceses and show just cron proc | dont show in this pocceses, procces this word grep


####################################################

			regular expretion

man 7 regex

^abc			# ^  line start with abc ( abcdeÃ¶ )

abc$			# $   line end with abc ( slknslknabc )

a.b			# .   any character exept newline ( abc, aac, a2c, atc)

1|8			# |	alternativ   or 1 or 8 ( 1, 8)

ab{2}c			#  {}  explicit quantity of preceding character ( abbc )

a[bB]c			# [] explicit set of characters to match (abc, aBc )

(123){3}		# {} group of characters ( 123123123 )

ab*c			# * Null or more of the preceding character ( ac, abc, abbbbbbbc )

ab+c			# + One or more of the preceding character (abc, abbbbbc )

ab?c			# ? Null or one of the preceding character (ac, abc )


###########################################################################################

				grep + regex

grep 'abc$' grepfile1

man -k user | egrep '1|8'		# extendert (exstandert)

egrep '(123){3}' grefile1		# egrep 

grep 'ab*c' grepfile1			# just grep


###########################################################################################

					cut - cat - awk - sed

cut -d : -f 3 /etc/passwd | sort -n		# -d delimiter ':' column  -f ( look for trird  character and sort  -n -> by number) 

cut -d : -f 1 /etc/passwd | sort | tr [:lower:] [:upper:] 	# tr all lower do upper

echo hello | tr [a-z] [A-Z] 					# same like [:lower:] [:upper:]


awk -F : '{ print $1 }' /etc/passwd				# same like # cut -d : -f 3 /etc/passwd # -F separator ':'  print $1 - print column 1

sed -i -e '10d' grepfile1					# -i interactiv ( you can write immediately and save ) -e edit , '10d'  delete line number 10 from grepfile1



sed -n '5p' /etc/passwd						# show 5th line

ps aux | awk '{ print $1 }'					# 

grep '^root' /etc/* 2>/dev/null

grep '^...$' /etc/* 2>/dev/null

grep alex * 2>/dev/null | grep -v alexander			# find alex, but not alexander


##############################################################################################


su -					# change to root user to exit print exit

sudo -i					# same

su marat

id marat				# show group

usermod -aG wheel linda

sudo visudo				# open with nano?

w					# show who log in

chvt					# terminal with out grafic

chvt 1					# from  1 to 7

CLSR+ALT + F1 (1-7)			# open non grafic terminal

who					# show who is now connect

############################################################

				sshd - ssh command

ssh 192.168.4.240		# connect to the server from linux

ssh marat@192.168.4.240		# connect to the server from macOS


vi /etc/securetty

ip a				# show your IP

w				# show who is connect now and how

##################################################################################

				USERs

ps aux				# show processes

ps aux | less			# show all processes

sudo vipw			# show all users

useradd --help | less		# help


Usage: useradd [options] LOGIN
       useradd -D
       useradd -D [options]

Options:
  -b, --base-dir BASE_DIR       	# base directory for the home directory of the
                                	  new account
  -c, --comment COMMENT         	# GECOS field of the new account
  -d, --home-dir HOME_DIR      		# home directory of the new account
  -D, --defaults               		# print or change default useradd configuration
  -e, --expiredate EXPIRE_DATE  	# DATE limited time  # expiration date of the new account 
  -f, --inactive INACTIVE       	password inactivity period of the new account
  -g, --gid GROUP               	# name or ID of the primary group of the new
                                	account
  -G, --groups GROUPS           	# list of supplementary groups of the new
                                	account
  -h, --help                    	# display this help message and exit
  -k, --skel SKEL_DIR           	use this alternative skeleton directory
  -K, --key KEY=VALUE           	override /etc/login.defs defaults
  -l, --no-log-init       m      	do notuesr add the user to the lastlog and
                               		 faillog databases
  -m, --create-home             	# create the user's home directory
  -M, --no-create-home         		# do not create the user's home directory
  -N, --no-user-group           	# do not create a group with the same name as
                                	the user
  -o, --non-unique              	allow to create users with duplicate
                                	(non-unique) UID
  -p, --password PASSWORD       	# encrypted password of the new account
  -r, --system                  	# create a system account
  -R, --root CHROOT_DIR         	# directory to chroot into
  -s, --shell SHELL             	# login shell of the new account
  -u, --uid UID                 	# user ID of the new account
  -U, --user-group              	# create a group with the same name as the user
  -Z, --selinux-user SEUSER     	# use a specific SEUSER for the SELinux user mapping
      --extrausers              	# Use the extra users database


useradd -D				# default configuration

useradd -s /bin/zsh -c "my user" -m anna	#




					adduser --help

adduser [--home DIR] [--shell SHELL] [--no-create-home] [--uid ID]
[--firstuid ID] [--lastuid ID] [--gecos GECOS] [--ingroup GROUP | --gid ID]
[--disabled-password] [--disabled-login] [--add_extra_groups]
[--encrypt-home] USER

   Add a normal user

adduser --system [--home DIR] [--shell SHELL] [--no-create-home] [--uid ID]
[--gecos GECOS] [--group | --ingroup GROUP | --gid ID] [--disabled-password]
[--disabled-login] [--add_extra_groups] USER

   Add a system user

adduser --group [--gid ID] GROUP
addgroup [--gid ID] GROUP

   Add a user group

addgroup --system [--gid ID] GROUP

   Add a system group

adduser USER GROUP

   Add an existing user to an existing group

general options:
  --quiet | -q      don't give process information to stdout
  --force-badname   allow usernames which do not match the
                    NAME_REGEX[_SYSTEM] configuration variable
  --extrausers      uses extra users as the database
  --help | -h       usage message
  --version | -v    version number and copyright
  --conf | -c FILE  use FILE as configuration file


##############################################################################################

				GROUPs

groupadd --help

Usage: groupadd [options] GROUP

Options:
  -f, --force                  		 exit successfully if the group already exists,
                               		 and cancel -g if the GID is already used
  -g, --gid GID                 # use Group ID for the new group
  -h, --help                    		 display this help message and exit
  -K, --key KEY=VALUE          		 override /etc/login.defs defaults
  -o, --non-unique            		  allow to create groups with duplicate
                               		 (non-unique) GID
  -p, --password PASSWORD     		  use this encrypted password for the new group
  -r, --system                 		 create a system account
  -R, --root CHROOT_DIR         	directory to chroot into
      --extrausers              	Use the extra users database


usermod --help


Usage: usermod [options] LOGIN

Options:
  -c, --comment COMMENT         new value of the GECOS field
  -d, --home HOME_DIR           new home directory for the user account

  -e, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE

  -f, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE

  -g, --gid GROUP               force use GROUP as new primary group

  -G, --groups GROUPS           # new list of supplementary GROUPS

  -a, --append                  # append the user to the supplemental GROUPS
                                mentioned by the -G option without removing
                                him/her from other groups

  -h, --help                    display this help message and exit

  -l, --login NEW_LOGIN         new value of the login name
  -L, --lock                    lock the user account
  -m, --move-home               move contents of the home directory to the
                                new location (use only with -d)
  -o, --non-unique              allow using duplicate (non-unique) UID
  -p, --password PASSWORD       use encrypted password for the new password
  -R, --root CHROOT_DIR         directory to chroot into
  -s, --shell SHELL             new login shell for the user account
  -u, --uid UID                 new UserID for the user account
  -U, --unlock                  unlock the user account
  -v, --add-subuids FIRST-LAST  add range of subordinate uids
  -V, --del-subuids FIRST-LAST  remove range of subordinate uids
  -w, --add-subgids FIRST-LAST  add range of subordinate gids
  -W, --del-subgids FIRST-LAST  remove range of subordinate gids
  -Z, --selinux-user SEUSER     new SELinux user mapping for the user account


usermod -aG sales anna			# usermod -a and -G sales(group) anna (name-akk)

 
user TAB TAB				# come command



			userdel --help

Usage: userdel [options] LOGIN

Options:
  -f, --force                   force removal of files,
                                even if not owned by user
  -h, --help                    display this help message and exit
  -r, --remove                  remove home directory and mail spool
  -R, --root CHROOT_DIR         directory to chroot into
      --extrausers              Use the extra users database
  -Z, --selinux-user            remove any SELinux user mapping for the user


sudo userdel -r user1



group TAB TAB

Usage: groupdel [options] GROUP

Options:
  -h, --help                    display this help message and exit
  -R, --root CHROOT_DIR         directory to chroot into
  -f, --force                   delete group even if it is the primary group of a user




Usage: groupmod [options] GROUP

Options:
  -g, --gid GID                 change the group ID to GID
  -h, --help                    display this help message and exit
  -n, --new-name NEW_GROUP      change the name to NEW_GROUP
  -o, --non-unique              allow to use a duplicate (non-unique) GID
  -p, --password PASSWORD       change the password to this (encrypted)
                                PASSWORD
  -R, --root CHROOT_DIR         directory to chroot into


cd /etc/default

vi useradd

vi /etc/login.defs			# here you can change defaults

cd /etc/skel				# everything what here is, will be created with new User



			User paswd

passwd --help

Usage: passwd [options] [LOGIN]

Options:
  -a, --all                     report password status on all accounts
  -d, --delete                  delete the password for the named account
  -e, --expire                  force expire the password for the named account
  -h, --help                    display this help message and exit
  -k, --keep-tokens             change password only if expired
  -i, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --lock                    lock the password of the named account
  -n, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -q, --quiet                   quiet mode
  -r, --repository REPOSITORY   change password in REPOSITORY repository
  -R, --root CHROOT_DIR         directory to chroot into
  -S, --status                  report password status on the named account
  -u, --unlock                  unlock the password of the named account
  -w, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS
  -x, --maxdays MAX_DAYS        set maximum number of days before password
                                change to MAX_DAYS

passwd brenda			# change pass for brenda

echo password | passwd --stdin anna	# ?

chage --help

Usage: chage [options] LOGIN

Options:
  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY
  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE
  -h, --help                    display this help message and exit
  -I, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --list                    show account aging information
  -m, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -M, --maxdays MAX_DAYS        set maximim number of days before password
                                change to MAX_DAYS
  -R, --root CHROOT_DIR         directory to chroot into
  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS


sudo chage anna

minimum days:			# for how many days will pass working
max days:			# -- . --	
last pass change:		#
pass expiration Warning: 	# 
pass inactive:			# inactive
Akk Expiration date:		# desactivating day




grep anna /etc/passwd /etc/shadow	# 


/etc/passwd:anna:x:1003:1003:my user:/home/anna:/bin/zsh

anna -> user

x -> pass is not here

1003 -> user id

1003 -> group id

my user commentar

/home/anna -> home directory

/bin/zsh -> shell



/etc/shadow:anna:!:18377:7:99999:7:::

anna -> user

! -> password

18377:7:99999:7::: -> pass properties

18377 -> number of day since 1 janvary 1970

7 -> minimum fulinity of the password

99999 -> days

7 -> remining 7 day before expired


sudo vipw		# to change this properties

sudo vipw -s 		# passwords


##########################################################################################

				Groups


cat /etc/group				# all group


sales:x:1004:anna  -> secondary group


sales -> name of group

x -> group password not here

1004 -> number of group

anna -> mambers of the group


linda:x:1001: -> primary group

you don't need to indificate


##########################################################################################


			Configuring login on External Authentication Sources

PAM
sssd

/etc/sssd/sssd.conf


sudo apt-get install "Directory Client"		# install ???



cd /etc/security/

vi limits.conf					# config groups users



#
homework

create users:

linda
laura
anna
anouk

set their password to exppire after 60 days

create a group sales and make linda and laura members of that group

create a group account and make anna and anouk members af that group

Also create a group users, and make all four users members of that group as a secondary group

use input redirection to set the password for these users to "password"

Ensure all these users get a home directory in /home
make sure that members of the group sales can no more 25 simultaneous processes from the shell

#

sudo userdel -r user1

groupdel [options] GROUP

#
sudo vipw				# users info

sudo vipw -s				# user pass info

id marat				# users info

cat /etc/group				# groups info

sudo vi /etc/login.defs			# change  param for new users

grep linda /etc/passwd /etc/shadow	# user info

sudo chage -l linda


#

sudo groupadd sales
sudo groupadd account


sudo vi /etc/login.defs
change 'PASS_MAX' day on 60


useradd -g sales -G users -m -d /home/linda linda	# primary group secondary group makedir - dir
useradd -g sales -G users -m -d /home/laura laura
useradd -g account -G users -m -d /home/anna anna
useradd -g account -G users -m -d /home/anouk anouk


sudo chage linda  		# change  ex date
sudo chage -l linda


passwd linda			# change passwd


cd /etc/security
sudo vi limits.conf 
add line:
@sales hard nproc 25		# for group sales just 25 processes

###########################################################################################################


























