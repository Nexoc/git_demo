udef this is ex Devfs

montage in /dev

mem					fisical memory PC
null					null
pts/					psevdoterminals
urandom					generator couter
sdx					block 
tty					apparat terminal



Sysfs

/sys

devices/
bus/
drivers/
block/
class/


Procfs

/proc

PID/
cpuinfo/
devices/
mounts/
sys/



whoami				#
hostname			
date				# date
uname				# sys name
passwd				# change pass
touch			
last

whoami --help
hostname  --help | less		# show in new window



#############################################################################

					man

SECTIONS

 1. Executable programs or shell commands				# user command
 2. System calls (functions provided by the kernel)
 3. Library calls (functions within program libraries)
 4. Special files (usually found in /dev)				# devices
 5. File formats and conventions eg /etc/passwd				# config files
 6. Games
 7. Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)

 8. System administration commands (usually only for root)		# sysadmin command
 9. Kernel routines [Non standard]


man 8 useradd						# info about how sysadmin(8) add user

man -a passwd						# info -a (all) about pass


man -k user						# info about all command whith "user"

man -k user | grep 8					# "grep 8" all command from sysadmin

work just in sentOS su -				# password and you are on "root mode" # after to exit write exit


apropos user 						# same like "man -k user"

################################################################################################

					--help

passwd --help						# show shortly info how to use this command

#############################################################################################


bash tab conpletion					# 2 click TAB if you want info about command

history 


redirection
						
# STBIN(input, your keybord)	<  	# use maus or keybord
# STBOUT(out)			> >> 	# overwriting to > and append to >>
# STBERR(err)			2> 	# to send error to 


piping it is "|"

ls | less				 # ls will be filtred with less

ps aux | grep httpd			# show all process and filtred by grep (with word httpd)



ls > listfile				# STBOUT redirect your command to file

find /proc -name "cpu*" 2>/dev/null	# redirect all error to null device

man -k user | wc			# wc -how many 'lines' 'words' 'literal'


history					# history of your all command


###################################################################################################

				bash shell scripts

echo who > myscript
echo ls >> myskript
cat myskript
chmod +x myscript
./myscript

#####################################################################################################

man hier				

#################################################################################################
					LS list
ls --help
ls
ls -l		# long
ls -a		# show all files, included hide files
ls -la
ll
ls -lrt		# sort by time
ls -l /etc
ls -ld /etc	# dir	

#################################################################################################

					globbing	

*					# ls a* any character (all command beginimg with a)
?					# ls ca? 3 character, first second ca and third ? 
[a-b]					# ls ca[bt] it is or b or r, [b-t] from b to t

ls [a-d]??* 

ls -d a*    				# ls any directory with name a*
ls -d a????*				# ls any dir with a* minimum literals a+(4?) and maybe more
ls -d a[dn]*				# ls dir a+[d or n] + any
ls -R					# that is inside

#################################################################################################


					cp - copy

cp [OPTION]... [-T] SOURCE DEST
  or:  cp [OPTION]... SOURCE... DIRECTORY
  or:  cp [OPTION]... -t DIRECTORY SOURCE...


cp --help

sudo cp /etc/hosts .

cp /etc/hosts ~/files/			# ~/files/  have to be with / closed, or it will be not directory, it's will be file

sudo rm -rf tmp


###################################################################################################


mkdir date				# make dir

mkdir -p file/data			# -p path (with out does not work)

mkdir -p photos/2017			# same

rmdir date				# it's works just wen it' empty

rm -rf

####################################################################################################

				Absolute and Relative Paths

/tmp/data/files/pete				# absolute path

################################################################################################

					moving files with mv

mv testfile anotherfile				# rename

mv /tmp/testfile ~				# move to the home directory

############################################################################################

					remove


rm anotherfile				# remove files
rm -r etc				# remove directory this question 
rm -rf etc				# with out question
rm -- -myfile				# if you want to remove file with "-" you have to write --

###############################################################################################

					Links

link 
-hard link
-symbolic link


ln /etc/hosts myhosts				# create hard link
ls -il /etc/hosts myhosts			# show inote number(file id) and more info
echo hallo >> myhosts				# add in file hallo
ls -il						# show both files is changed


ln -s myhosts symhosts				# create soft link
ls -il /etc/hosts myhosts symhosts		# what is differences

ln -s /etc etc
rm etc						# they ask to remove sombolic link

###############################################################################################

					find							

find /etc -name hosts					# find name host

find /etc -name "*hosts*"				# words with name *hosts*	

find / -user "marat"					# 

man find						# 


find /etc -name "*hosts*" -exec cp {} find/names \;	# find in etc name host -exec it is do -> what do? cp {} find/names



find /etc -size +100k -exec cp {} find/size \;

-size n[cwbkMG]
              
              suffixes can be used:
              `b'    for 512-byte blocks 
              `c'    for bytes
              `w'    for two-byte words
              `k'    for Kibibytes 
              `M'    for  Mebibytes  
              `G'    for Gibibytes 


find /etc -exec grep -l marat {} \; 2>/dev/null


find /etc -exec grep -l marat {} \; -exec cp {} find/contents/ \; 2>/dev/null


find /etc -name "[ab]*" -exec cp {} tmp/files/ \;

find tmp/files -name "c*" -exec mv {} tmp/files/photos \;

find /etc -size -1000c -exec cp {} tmp/files/pictures/ \; 2>/dev/null

ln -s var tmp/files/

###############################################################################


				VIM - VI

command mode
input mode

how to start vi -> inputmode

i		# inputmode
o		# open new line
O		# open a new line above the position
[Ins] tap on keybord -> like i
a		# append after position



g 		# top of the document
G		# bottom of the document
pgd		# page down 
pgu		# page up

/yourtext	# find some text
n		# next, find ->
N		# find oposit direction
:300		# go to number 300 of line
v


p

how to start vi -> commandmode

Esc
:ZZ 		# save your text
:wq!		# save your text "write quit"


work with text:

v		# visual (marking text)
d		# delete
y		# yank -> copy
p		# past

u		# undo (memory and you can go back <-)
Ctrl-R		# redo ( go front wenn you go to far with undo)

dd		# delete line
x		# delete character
gg 		# go to begining of the text
G		# go on the end

d$		# delete from your position all line on right site

d^		# delete from your pos all line on the left site 

:%s/drei/ZOPA/g	# change all words drei on ZOPA # with out g just first

################################################################

				less


less /var/log/auth.log

/root		# find root in this document. and use n for next "root"

g		# to go on the TOP of the document
G		# go to bottom


#################################################################

				cat and tac


cat print file on terminal
tac print file on the terminal back

##############################################################

			tail and head

tail -n 5 /etx/passwd		# show last 5 lines off document

head -n 5 /etc/passwd		# show first 5 lines


wen you want just 4 line from document

head -n 4 /etc/passwd | tail -n 1

##########################################################################
			grep

ps aux | grep cron | grep -v grep	# show all procceses and show just cron proc | dont show in this pocceses, procces this word grep


####################################################

			regular expretion

man 7 regex

^abc			# ^  line start with abc ( abcdeÃ¶ )

abc$			# $   line end with abc ( slknslknabc )

a.b			# .   any character exept newline ( abc, aac, a2c, atc)

1|8			# |	alternativ   or 1 or 8 ( 1, 8)

ab{2}c			#  {}  explicit quantity of preceding character ( abbc )

a[bB]c			# [] explicit set of characters to match (abc, aBc )

(123){3}		# {} group of characters ( 123123123 )

ab*c			# * Null or more of the preceding character ( ac, abc, abbbbbbbc )

ab+c			# + One or more of the preceding character (abc, abbbbbc )

ab?c			# ? Null or one of the preceding character (ac, abc )


###########################################################################################

				grep + regex

grep 'abc$' grepfile1

man -k user | egrep '1|8'		# extendert (exstandert)

egrep '(123){3}' grefile1		# egrep 

grep 'ab*c' grepfile1			# just grep


###########################################################################################

					cut - cat - awk - sed

cut -d : -f 3 /etc/passwd | sort -n		# -d delimiter ':' column  -f ( look for trird  character and sort  -n -> by number) 

cut -d : -f 1 /etc/passwd | sort | tr [:lower:] [:upper:] 	# tr all lower do upper

echo hello | tr [a-z] [A-Z] 					# same like [:lower:] [:upper:]


awk -F : '{ print $1 }' /etc/passwd				# same like # cut -d : -f 3 /etc/passwd # -F separator ':'  print $1 - print column 1

sed -i -e '10d' grepfile1					# -i interactiv ( you can write immediately and save ) -e edit , '10d'  delete line number 10 from grepfile1



sed -n '5p' /etc/passwd						# show 5th line

ps aux | awk '{ print $1 }'					# 

grep '^root' /etc/* 2>/dev/null

grep '^...$' /etc/* 2>/dev/null

grep alex * 2>/dev/null | grep -v alexander			# find alex, but not alexander


##############################################################################################


su -					# change to root user to exit print exit

sudo -i					# same

su marat

id marat				# show group

usermod -aG wheel linda

sudo visudo				# open with nano?

w					# show who log in

chvt					# terminal with out grafic

chvt 1					# from  1 to 7

CLSR+ALT + F1 (1-7)			# open non grafic terminal

who					# show who is now connect

############################################################

				sshd - ssh command

ssh 192.168.4.240		# connect to the server from linux

ssh marat@192.168.4.240		# connect to the server from macOS


vi /etc/securetty

ip a				# show your IP

w				# show who is connect now and how

##################################################################################

				USERs

ps aux				# show processes

ps aux | less			# show all processes

sudo vipw			# show all users

useradd --help | less		# help


Usage: useradd [options] LOGIN
       useradd -D
       useradd -D [options]

Options:
  -b, --base-dir BASE_DIR       	# base directory for the home directory of the
                                	  new account
  -c, --comment COMMENT         	# GECOS field of the new account
  -d, --home-dir HOME_DIR      		# home directory of the new account
  -D, --defaults               		# print or change default useradd configuration
  -e, --expiredate EXPIRE_DATE  	# DATE limited time  # expiration date of the new account 
  -f, --inactive INACTIVE       	password inactivity period of the new account
  -g, --gid GROUP               	# name or ID of the primary group of the new
                                	account
  -G, --groups GROUPS           	# list of supplementary groups of the new
                                	account
  -h, --help                    	# display this help message and exit
  -k, --skel SKEL_DIR           	use this alternative skeleton directory
  -K, --key KEY=VALUE           	override /etc/login.defs defaults
  -l, --no-log-init       m      	do notuesr add the user to the lastlog and
                               		 faillog databases
  -m, --create-home             	# create the user's home directory
  -M, --no-create-home         		# do not create the user's home directory
  -N, --no-user-group           	# do not create a group with the same name as
                                	the user
  -o, --non-unique              	allow to create users with duplicate
                                	(non-unique) UID
  -p, --password PASSWORD       	# encrypted password of the new account
  -r, --system                  	# create a system account
  -R, --root CHROOT_DIR         	# directory to chroot into
  -s, --shell SHELL             	# login shell of the new account
  -u, --uid UID                 	# user ID of the new account
  -U, --user-group              	# create a group with the same name as the user
  -Z, --selinux-user SEUSER     	# use a specific SEUSER for the SELinux user mapping
      --extrausers              	# Use the extra users database


useradd -D				# default configuration

useradd -s /bin/zsh -c "my user" -m anna	#




					adduser --help

adduser [--home DIR] [--shell SHELL] [--no-create-home] [--uid ID]
[--firstuid ID] [--lastuid ID] [--gecos GECOS] [--ingroup GROUP | --gid ID]
[--disabled-password] [--disabled-login] [--add_extra_groups]
[--encrypt-home] USER

   Add a normal user

adduser --system [--home DIR] [--shell SHELL] [--no-create-home] [--uid ID]
[--gecos GECOS] [--group | --ingroup GROUP | --gid ID] [--disabled-password]
[--disabled-login] [--add_extra_groups] USER

   Add a system user

adduser --group [--gid ID] GROUP
addgroup [--gid ID] GROUP

   Add a user group

addgroup --system [--gid ID] GROUP

   Add a system group

adduser USER GROUP

   Add an existing user to an existing group

general options:
  --quiet | -q      don't give process information to stdout
  --force-badname   allow usernames which do not match the
                    NAME_REGEX[_SYSTEM] configuration variable
  --extrausers      uses extra users as the database
  --help | -h       usage message
  --version | -v    version number and copyright
  --conf | -c FILE  use FILE as configuration file


##############################################################################################

				GROUPs

groupadd --help

Usage: groupadd [options] GROUP

Options:
  -f, --force                  		 exit successfully if the group already exists,
                               		 and cancel -g if the GID is already used
  -g, --gid GID                 # use Group ID for the new group
  -h, --help                    		 display this help message and exit
  -K, --key KEY=VALUE          		 override /etc/login.defs defaults
  -o, --non-unique            		  allow to create groups with duplicate
                               		 (non-unique) GID
  -p, --password PASSWORD     		  use this encrypted password for the new group
  -r, --system                 		 create a system account
  -R, --root CHROOT_DIR         	directory to chroot into
      --extrausers              	Use the extra users database


usermod --help


Usage: usermod [options] LOGIN

Options:
  -c, --comment COMMENT         new value of the GECOS field
  -d, --home HOME_DIR           new home directory for the user account

  -e, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE

  -f, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE

  -g, --gid GROUP               force use GROUP as new primary group

  -G, --groups GROUPS           # new list of supplementary GROUPS

  -a, --append                  # append the user to the supplemental GROUPS
                                mentioned by the -G option without removing
                                him/her from other groups

  -h, --help                    display this help message and exit

  -l, --login NEW_LOGIN         new value of the login name
  -L, --lock                    lock the user account
  -m, --move-home               move contents of the home directory to the
                                new location (use only with -d)
  -o, --non-unique              allow using duplicate (non-unique) UID
  -p, --password PASSWORD       use encrypted password for the new password
  -R, --root CHROOT_DIR         directory to chroot into
  -s, --shell SHELL             new login shell for the user account
  -u, --uid UID                 new UserID for the user account
  -U, --unlock                  unlock the user account
  -v, --add-subuids FIRST-LAST  add range of subordinate uids
  -V, --del-subuids FIRST-LAST  remove range of subordinate uids
  -w, --add-subgids FIRST-LAST  add range of subordinate gids
  -W, --del-subgids FIRST-LAST  remove range of subordinate gids
  -Z, --selinux-user SEUSER     new SELinux user mapping for the user account


usermod -aG sales anna			# usermod -a and -G sales(group) anna (name-akk)

 
user TAB TAB				# come command



			userdel --help

Usage: userdel [options] LOGIN

Options:
  -f, --force                   force removal of files,
                                even if not owned by user
  -h, --help                    display this help message and exit
  -r, --remove                  remove home directory and mail spool
  -R, --root CHROOT_DIR         directory to chroot into
      --extrausers              Use the extra users database
  -Z, --selinux-user            remove any SELinux user mapping for the user


sudo userdel -r user1



group TAB TAB

Usage: groupdel [options] GROUP

Options:
  -h, --help                    display this help message and exit
  -R, --root CHROOT_DIR         directory to chroot into
  -f, --force                   delete group even if it is the primary group of a user




Usage: groupmod [options] GROUP

Options:
  -g, --gid GID                 change the group ID to GID
  -h, --help                    display this help message and exit
  -n, --new-name NEW_GROUP      change the name to NEW_GROUP
  -o, --non-unique              allow to use a duplicate (non-unique) GID
  -p, --password PASSWORD       change the password to this (encrypted)
                                PASSWORD
  -R, --root CHROOT_DIR         directory to chroot into


cd /etc/default

vi useradd

vi /etc/login.defs			# here you can change defaults

cd /etc/skel				# everything what here is, will be created with new User



			User paswd

passwd --help

Usage: passwd [options] [LOGIN]

Options:
  -a, --all                     report password status on all accounts
  -d, --delete                  delete the password for the named account
  -e, --expire                  force expire the password for the named account
  -h, --help                    display this help message and exit
  -k, --keep-tokens             change password only if expired
  -i, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --lock                    lock the password of the named account
  -n, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -q, --quiet                   quiet mode
  -r, --repository REPOSITORY   change password in REPOSITORY repository
  -R, --root CHROOT_DIR         directory to chroot into
  -S, --status                  report password status on the named account
  -u, --unlock                  unlock the password of the named account
  -w, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS
  -x, --maxdays MAX_DAYS        set maximum number of days before password
                                change to MAX_DAYS

passwd brenda			# change pass for brenda

echo password | passwd --stdin anna	# ?

chage --help

Usage: chage [options] LOGIN

Options:
  -d, --lastday LAST_DAY        set date of last password change to LAST_DAY
  -E, --expiredate EXPIRE_DATE  set account expiration date to EXPIRE_DATE
  -h, --help                    display this help message and exit
  -I, --inactive INACTIVE       set password inactive after expiration
                                to INACTIVE
  -l, --list                    show account aging information
  -m, --mindays MIN_DAYS        set minimum number of days before password
                                change to MIN_DAYS
  -M, --maxdays MAX_DAYS        set maximim number of days before password
                                change to MAX_DAYS
  -R, --root CHROOT_DIR         directory to chroot into
  -W, --warndays WARN_DAYS      set expiration warning days to WARN_DAYS


sudo chage anna

minimum days:			# for how many days will pass working
max days:			# -- . --	
last pass change:		#
pass expiration Warning: 	# 
pass inactive:			# inactive
Akk Expiration date:		# desactivating day




grep anna /etc/passwd /etc/shadow	# 


/etc/passwd:anna:x:1003:1003:my user:/home/anna:/bin/zsh

anna -> user

x -> pass is not here

1003 -> user id

1003 -> group id

my user commentar

/home/anna -> home directory

/bin/zsh -> shell



/etc/shadow:anna:!:18377:7:99999:7:::

anna -> user

! -> password

18377:7:99999:7::: -> pass properties

18377 -> number of day since 1 janvary 1970

7 -> minimum fulinity of the password

99999 -> days

7 -> remining 7 day before expired


sudo vipw		# to change this properties

sudo vipw -s 		# passwords


##########################################################################################

				Groups


cat /etc/group				# all group


sales:x:1004:anna  -> secondary group


sales -> name of group

x -> group password not here

1004 -> number of group

anna -> mambers of the group


linda:x:1001: -> primary group

you don't need to indificate


##########################################################################################


			Configuring login on External Authentication Sources

PAM
sssd

/etc/sssd/sssd.conf


sudo apt-get install "Directory Client"		# install ???



cd /etc/security/

vi limits.conf					# config groups users



####################################################################################################################


homework


create users:

linda
laura
anna
anouk

set their password to exppire after 60 days

create a group sales and make linda and laura members of that group

create a group account and make anna and anouk members af that group

Also create a group users, and make all four users members of that group as a secondary group

use input redirection to set the password for these users to "password"

Ensure all these users get a home directory in /home
make sure that members of the group sales can no more 25 simultaneous processes from the shell

#


sudo userdel -r user1

groupdel [options] GROUP









###############################################################################################

#
sudo vipw				# users info

sudo vipw -s				# user pass info

id marat				# users info

cat /etc/group				# groups info

sudo vi /etc/login.defs			# change  param for new users

grep linda /etc/passwd /etc/shadow	# user info

sudo chage -l linda

getfacl sales				#info ACL promissions

lsattr file1 				# to see the attr

tail -n 5 /etc/group			# info dir promissions

tail -n 5 &etc/passwd			# info group promissions






#

sudo groupadd sales
sudo groupadd account


sudo vi /etc/login.defs
change 'PASS_MAX' day on 60


useradd -g sales -G users -m -d /home/linda linda	# primary group secondary group makedir - dir
useradd -g sales -G users -m -d /home/laura laura
useradd -g account -G users -m -d /home/anna anna
useradd -g account -G users -m -d /home/anouk anouk


sudo chage linda  		# change  ex date
sudo chage -l linda


passwd linda			# change passwd


cd /etc/security
sudo vi limits.conf 
add line:
@sales hard nproc 25		# for group sales just 25 processes


###########################################################################################################






				promissions



			files				dir

read 4			read(open file)			list (ls) (ownership user u group g other o)

write 2			modify 				create or delete

execute 1		run				cd on dir



chmod 1760
chmod 777


#

mkdir -p /data/sales
mkdir -p /data/account

ls -s

chgrp account account	# group account for dir account

chown anna account	# anna owner of dir account

chown linda.sales sales	# user linda and group sales is owner of dir sales 

chmod g+w account	# change promisions for dir account (g group + w write)

chmod o-rx account	# remove promissions for other for dir account

chmod 770 sales



###

suid		# set user id
sgid		# set group id
sticky		# sticky bit


		files					dir

suid 4		run as owner(!)				-

sgid 2		run as group owner (!)			inherit dir group owner( if new file created)

sticky 1	-					 delete only if owner


chmod 4740


##################### 		chmod u+s playme

cd /home/linda
vi playme


#!/bin/bash
echo do you want to play?
read

rm -rf /		# remove all files from OS



chmod +x playme

su - linda

./playme

!NO


chmod u+s playme

####################		chmod g+s 

su - lisa
id
cd /data/sales/
touch lisa

-rw-rw-r-- 1 lisa  lisa  0 Mai  1 13:19 lisa

		lisa lisa


chmod g+s sales		# give extra promissions to dir salem group +s ( wan you create new file, owner, will be a group, who is dir owner)


####################		sticky

sticky

chmod +t sales		# add promissions( just user owner can delete the files, group owner - not)

#############################################################################################


######################		 ACL

- normal

- defoult


setfacl -R -m g:sales:rx file		# normal

setfacl -R -m d:g:sales:rx file		# defoult

filesystem acl option





for new files  by defoult

setfacl -m d:g:sales:rx file	

setfacl -R -m g:sales:rx account


man setfacl

-R 			# recursivly
-m			# modify always after -m have to come what i want to modify
g			# group
sales			# group dir
rx			# promissions
account			# name off group for who you give prommisions 


d			# defoult


getfacl	account		# info ACL


setfacl -m u:lisa:r file			# Granting an additional user read access

setfacl -m m::rx file				# Revoking write access from all groups and all named users (using the effective rights mask)

setfacl -x g:staff file				# Removing a named group entry from a file's ACL

getfacl file1 | setfacl --set-file=- file2	# Copying the ACL of one file to another

getfacl --access dir | setfacl -d -M- dir	# Copying the access ACL into the Default ACL



###########################################################################################


#####				chattr	lsattr

chattr

lsattr

man chattr


The format of a symbolic mode is +-=[aAcCdDeijPsStTu]
 
+ to add
- to delete
= causes them to be the only attributes that the files have.


The  letters 'aAcCdDeijPsStTu' select the new attributes for the files:

a		# append only
A		# no atime updates
c		# compressed
C		# no copy on write
d		# no  dump
D		# synchronous directory updates
e		# extent format 
i		# immutable
j		# data journalling
P		# project  hierarchy
s		# secure  deletion
S		# synchronous updates
t		# no  tail-merging
T		# top  of  directory  hierarchy
u		# undeletable


The following attributes are read-only, and may be listed by lsattr(1) but not
modified by chattr: encrypted (E), indexed directory (I), and inline data (N).

Not  all flags are supported or utilized by all filesystems; refer to filesysâ
tem-specific man pages such as btrfs(5), ext4(5), and xfs(5) for more filesysâ
tem-specific details.

OPTIONS
       -R     Recursively change attributes of directories and their contents.

       -V     Be verbose with chattr's output and print the program version.

       -f     Suppress most error messages.

       -v version             Set the file's version/generation number.
 	-p project            Set the file's project number.


chattr +i file1		#  immutable

lsattr file1 		# to see the attr


#############################################################################################


				Quota


https://linuxhint.com/disk_quota_ubuntu/

to install
sudo apt update
sudo apt install quota

sudo apt install linux-image-extra-virtual		 # if you need

sudo vi /etc/fstab					# change param

Now, add usrquota and/or grpquota options in the options field (4th) of the filesystem for which you want to enable quota in the /etc/fstab file. Once youâre done, save the file by pressing <Ctrl> + x followed by y and then press <Enter>.

NOTE: To enable only user quota, use the usrquota option only. To enable only group quota, use the grpquota option only. To enable both user and group quota, use usrquota,grpquota option.

https://linuxhint.com/wp-content/uploads/2019/02/6-23.png

usrquota,grpquota


sudo reboot


sudo mount -o remount,usrquota,grpquota /

mount 						# info /dev/sda1 on / type ext4 (rw,relatime,quota,usrquota,grpquota,errors=remount-ro)


$ sudo quotacheck -cum /			# only user quota on the root (/) filesystem:


$ sudo quotacheck -cgm /			# use group quota only


$ sudo quotacheck -cugm /			# to use both user and group quota

sudo quotacheck -mavug				# quota create 2 files aquota.group and aquota.users

quota -vu lisa					# info


sudo quotaon -v /				# turn on quota on the root (/) filesystem
qoutaon -a

edquota -u lisa					# change parameters 

sudo quotaoff -v /				# to turn off quota


sudo edquota -u linda				# info  Donât try to change it!!!
https://linuxhint.com/wp-content/uploads/2019/02/12-11.png


sudo blockdev --getbsz /dev/sda1		# the block size is 4096 bytes or 4KB *sda1 or sda2 

#
You want to let the user linda use only 1 GB of disk space.
1 GB = 1024 MB = 1024 * 1024 KB.
How many blocks?
Well, (1024 * 1024 / 4) = 262144 blocks for each gigabyte 
There are 262144 blocks for each gigabyte.
So, for 5 GB of disk space, the block size is 5 * 262144 = 1310720

#
Inode: It is the number of files you can create in a filesystem. 
So, if the user bob is allowed to have 1000 inodes, then he can create only 1000 files or directories. Even if the total size of 1000 files or directories is less than the number of blocks he can use, he wonât still be able to create any new files or directories. 
So, I would keep it a little high.

A good measure is keeping it about 60-70% of the total block size.
So, for a block size of 262144, a good enough inode number is 157280 or 183500.


#
Soft and Hard Limit: 
Both block and inode can have a soft and a hard limit. 
A user or group can exceed soft limit for a certain number of days called grace period. 
But in no means they are allowed to exceed the hard limit. 
You can put 0 for soft limit to disable soft limit if you want. 
In this case, only hard limit will be used.

NOTE: 
You should only set the soft and hard limit. 
Donât modify the values of the blocks and inode columns. 
They represent the blocks and inodes that the user is currently using.

I set the quota for the user bob as follows. 
Once youâre done, save the file. 
The quota should be applied.
https://linuxhint.com/wp-content/uploads/2019/02/14-10.png


######################

sudo edquota -g www-data			# set a group quota for the group www-data

$ sudo edquota -t				# change the grace period for the soft limit


Generating Quota Reports:

$ sudo repquota -aug				# generate quota usage reports

$ sudo repquota -au				# only to generate user quota reports

$ sudo repquota -ag				# only to generate group quota reports



############	find prommisions

man find			# to find use "/perm" and n next

-perm mode			# just 600 have to find 
-perm -mode			#
-perm /mode			#
-perm +mode			#

. -> where are you now or use /home

find . -perm 0600 -exec ls -l {} \;
find . -perm -0600 -exec ls -l {} \;
find . -perm /0600 -exec ls -l {} \;
find . -perm +0600 -exec ls -l {} \;

find / -perm /4000 -exec ls -l {} \;


###################################################################################################



					Homework


#
Create the directories /data/sales /data/account


members of the group sales should be able to read and write files in /data/sales
members of the group account should be able to read and write in data/account

Members of sales should have read access to /data/account
and members of account should have read access to ata/sales

No other users should have access to these directories

Users will only be allowed to delete files they have created themselves, but user ann is the sales manager all sales files


1 +

2
 	chgrp sales sales
	chgrp account account

	chmod g+rw sales
	chmod g+rw account

3
	setfacl -R -m g:sales:rx account
	setfacl -R -m g:account:rx sales
	
	setfacl -R -m d:g:sales:rx account
	setfacl -R -m d:g:account:rx sales

4
	chmod 770 sales
	chmod 770 account

		or

	chmod o-rwx sales
	chmod o-rwx account
5
	chmod +t sales
	chmod +t account


############################################################################################################################


chmod ...
chgrp...

setfacl -R -m g:sales:rx file		# normal

setfacl -R -m d:g:sales:rx file		# defoult

getfacl	account		# info ACL




chgrp account account	# group account for dir account

chown anna account	# anna owner of dir account


chmod u+s play me	# 



chown linda.sales sales	# user linda and sales is owner and of dir sales 

chmod g+w account	# change promisions for dir account (g group + w write)

chmod o-rx account	# remove promissions for other for dir account

chmod 770 sales




chmod g+s sales		# give extra promissions to dir salem group +s ( wan you create new file, owner will be group who is dir owner)

chmod +t sales		# add promissions( just user owner can delete the files, group owner - not)


################################################################################################################################################




					NETWORKING
	

	conf networking
	conf the SSH Servis
	conf a Firewall
	conf Tine Services



IPv4
IPc6

Applying Run-time Network Configuration

Understanding Network Device Naming

Apply Persastent Network Confoguration in Cent OS and i hope Ubuntu

############################################################################################################


IP		


-------------------------------------------------------------------
		Internet  DNS â Domain Name Services
		â
	â router â 10.0.0.1 /16
		â
	subnet mask 10.0.0.0 /16
		â
10.0.0.2 /16 â router â10.10.0.1/24	default gateway
		â
	subnet mask 10.10.0.0/24
		â
 	user 10.10.0.10/24



------------------------------------------------------------------
	IP
	subnet mask
	default router
	DNS
	â
	DHCP (Dinamic Host Configuration Protocol) dhclient(linux)

----------------------------------------------------------------------

IPv4

IPv6 128 bits


###########

IPv6 128 bits and written in hexadecomal

fe80:1223:3345:5567:abcd:efef:1000:0001

Leading zeros can be omitted, as well as long strings of zeros
fe80::1			# left out six 0


When referring to address + port, put the address between square brackets:
[fe80::1]:80

Default subnet mask is /64

Node bit of the address may cantain the device MAC adress


::1/128				# localhost

::				# unspecified address (0.0.0.0) 

::/0				# default route

2000::/3			# global unicast address

fd00::/8			# inuque local addresses (privat addresses)

fe80::/64 			# link-local address

ff00::/8			# multicast



fe80::				# address is used by default

through static addressing


DHCPv6		# multicast is sent out to ff02::1:2 port 547/UDP. This is the all DHCP multicast group. The DHCP server sends a packet back to client 546/UDP


SLAAC (Stateless Address Auto Configuration) # Router solicitation is sent to ff02::02; the all router multicast group. The router sents back an IP address, which aloows the host to learn the netwirk prefix. Install the radvd package to use this

########

ip help			# show options

ip link show		# show network interfaces

ip address show		# lo -> loop back interface (internal, always inet 127.0.0.1/8 or inet6 ::1/128),
			# enp0s3 -> MAC address link/ether 08:00:27:8d:87:a5 brd ff:ff:ff:ff:ff:ff
			# IPv4 address  inet 10.0.2.15/24 brd 10.0.2.255
			# IPv6 adderss  inet6 fe80::e446:cb7d:c68f:753b/64


ip address help		# help

ip address add dev ens33 10.0.010/24		# dev - device, ens33 device name, ip

ifconfig		# very old command on ip setup

ip rout show		# 

ping 8.8.8.8		# 

######


Boisdevname used device names that reveal information about physical location

em123 (em -> Ethernet Motherboard 123 ->Portnumber)

p<port>p<slot> (PCI, PCI port)

eno123 (EtherNet Onboard)

If driver doesn't reveal sufficient information, eth0 etc. is used

#######


				network configuration 


server admin guide			# read google

cd /etc/network

vi interfaces				# file 

make a copy:
cp interfaces interfaces.svv

auto ens33
iface ens33 inet static
address 192.168.4.250
netmask 255.255.255.0
gateway 192.168.4.2


#####

					host name

vi /etc/hostname				# my host name

uname -a					# show 

cd /proc/sys/kernel

cat hostname					# show the hostname

hostnamectl --help				#

  status                 Show current hostname settings
  set-hostname NAME      Set system hostname
  set-icon-name NAME     Set icon name for host
  set-chassis NAME       Set chassis type for host
  set-deployment NAME    Set deployment environment for host
  set-location NAME      Set location for host


vi /etc/hosts					# 

######


				DNS

vi /etc/resolv.conf				#  after reboot will be overwrite

vi /etc/nsswitch.conf				#	

##

			Configuration Networking

ping 8.8.8.8
64 bytes from 8.8.8.8: icmp_seq=1 ttl=53 time=127 ms

time=127 ms ->	speed of network conection

ping nu.nl			# 


dig nu.nl			# show all about site

sudo apt install nmap		# install nmap

nmap 127.0.0.53			# show the ports which one is open 

###############################################################################################

					Homework

Configure your hosts with persistent address configuration, matching the subnet that is used in your network. Choose any IP address you like, as long as it allows you to connect to outside computers.

Also configure an IPv6 address for internal use


#########################################################################################################


							SSH


For Ubuntu you HAVE TO install first

sudo apt install openssh-server

cd /etc/ssh/

sshd_config		# for sshd processes, server configuration

ssh_config 		# config for ssh client

vi ssh_config

systemctl 		# 

systemctl status	#

systemctl status sshd	# 

systemctl stop sshd	# stop command

systemctl start sshd

systemctl restart sshd	#

systemctl enable sshd	#

systemctl disable sshd	#



ps -ef | grep sshd		# show sshd

man ssh

ufw allow ssh			# if firewall is enabled, make sure to open the SSH port


########  		CONECT SSH


ssh 127.0.0.1			# conect to 127.0.0.1 ( it is my ip )

ssh anna@127.0.0.1		# log in as anna

exit				# to exit

ssh -X anna@127.0.0.1		# login as anna with grafical application

cd ~/.ssh			# 

ls

know_hosts

cat know_hosts			#

ssh-keygen			#

/home/anna/.ssh/id_rsa.pub

/home/anna/.ssh/id_rsa


ssh-copy-id 127.0.0.1		# to automatical connect with a server 


			To copy from or to the host


scp /etc/hosts 127.0.0.1:/tmp			# copy etc hosts failes to the host

scp 127.0.0.1:/etc/passwd .			# from host copy passwd to . (where i am now)



rsync -avz /tmp anna@127.0.0.1:/home/mar/tmp	# when you wanna copy dir



systemctl status sshd

sudo vi /etc/ssh/sshd_config			# permissions config

after you have to:
systemctl restart sshd				# to restart sshd




###########################################################################################################



					firewall


https://linuxconfig.org/how-to-configure-firewall-in-ubuntu-18-04

man ufw

sudo apt-get install ufw

sudo ufw status				# status

sudo ufw status verbose

sudo ufw enable				# enable

sudo ufw disable



sudo ufw allow ssh					# in

sudo ufw reject out ssh					# out

sudo ufw delete reject out ssh 				# delete rule

sudo ufw deny proto tcp from 192.168.4.245 to any port 22 # IP baned to 22 port	

sudo ufw logging on					# login on



sudo vi /etc/default/ufw		# Then make sure IPV6 is set to yes, like so: IPV6=yes

sudo ufw default deny outgoing		# 

sudo ufw app list			# what is runing

sudo ufw app info â<app_name>â		# 

sudo ufw allow ssh

sudo ufw allow http

sudo ufw allow 80/tcp

sudo ufw allow 'HTTP'

sudo ufw allow 1000:2000/tcp

sudo ufw allow 3000:4000/udp

sudo ufw allow from 192.168.1.104

sudo ufw allow from 192.168.1.104 to any port 22

sudo ufw allow from 192.168.1.0/24 to any port 3306

sudo ufw allow in on eth1 to any port 9992

sudo ufw deny from 192.168.1.0/24

sudo ufw deny from 192.168.1.0/24 to any port 80



sudo ufw delete 2

sudo ufw delete allow 22/tcp

sudo ufw reset


'''''''''''''''''''''''''''''''''''

man iptables

    iptables

	â
- INPUT
- OUTPUT
-FORWARD

iptables {-A|I} chain [-i/o ifau] [-s/d ipaddr] [-p udp|tcp|icmp[--dpart|sport number...]] -j [LOG|ACCEPT|DROP|REJECT]

 -A append -I insert 

-s 10.0.0.0/24

-p -> protocol ->

-p tcp --dport 22

-j jump 





sudo iptables -A INPUT -s 10.0.0.0/24 -p tcp --dport 22 -j ACCEPT

iptables -L				# show all 

iptables -P INPUT DROP			# close all input

iptables -P OUTPUT DROP			# close all output

iptables -A INPUT -i lo -j ACCEPT	# -A add to INPUT -i lo (incomming interface)

iptables -A OUTPUT -o lo -j ACCEPT	# -o lo (output loopback interface)

sudo iptables -L -v			# to see everything

sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT	# -p tcp --dport22 -> ssh trafic for input

sudo iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT # ssh trafic for output

sudo iptables -A OUTPUT -p tcp --dport 22 -j ACCEPT			# ssh trafic fot output

sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

now it's works



''''''''''''''''''''''''''''
webtrafic

iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT			# for webtrafic

iptables -A OUTPUT -p udp --dport 53 -j ACCEPT			# for dns

'''''''''''''''''''''''''''''
iptables -A INPUT -p udp --dport 123 -j ACCEPT			# for time synchron input
iptables -A OUTPUT -p udp --dport 123 -j ACCEPT			# for time synchr output

''''''''''''''''''''''''''''''''''''''
save

iptables-save > /etc/sysconfig/iptables				# save

''''''''''''''''''''''''''''''''''

sudo apt install iptables-services

#########################################################################################################


					TIME


hwclock (bios) utc
	â
system clock
	
NTP server (ntpd)
''''''''''''''''''''''''''''''

sudo hwclock				# bios clock

date					# date

date -s 19:15				# change the time to 19:15

hwclock --systohc			# synchronization sys to hc

hwclock --hctosys			# synchronization hc to sys


timedatectl				# show all info time on you comp

timedatectl --help

timedatectl set-ntp on
timedatectl set-ntp no

stratum
iburst
'''''''''''''''''''''''''''''''''''''''''''

ps aux | grep ntp

ntpd
ntpq

'''''''''''''''''''''''''''''''''''''''''''''''
137

######################################################################################################


			Operating Running Systems



			processes and jobs


kernel â  pid 1 : systemd â after all proc


sleep 600				# sleep 600 sek
clst+z					# move to the background

bg					# show background

sleep 700 &				# & -> run as bg

jobs					# show all bg jobs

fg					# front ground

fg 1					# fg number

cntrl+c					# cansel jobs

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

				TOP - processes

top - 18:33:42 up 1 day,  3:58,  1 user,  load average: 0,06, 0,03, 0,00

top -> time

log in how long -> up 1 day and 3:58 min

user 

load average : 
0,06 -> for last 1 min
0,03 -> for last 5 min
0,00 -> for last 15 min

top

push 1 and you can see the all Cpu


Tasks: 249 total,   4 running, 199 sleeping,   0 stopped,   0 zombie
%Cpu(s): 36,5 us (USER SPACE), 63,5 sy(SYSTEM SPACE),  0,0 ni,  0,0 id,  0,0 wa(WAIT),  0,0 hi,  0,0 si,  0,0 st
KiB Mem :  4030468 total,  1216572 free,  1144096 used,  1669800 buff/cache
KiB Swap:   483800 total,   483800 free,        0 used.  2576356 avail Mem 


PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND 

PID 		-> unic pronic ID		
USER		-> user
PR 		-> priority
NI    		->
VIRT		-> virtual memory
RES		-> resident memory
SHR		-> shared memory
S 		-> status S sleep R run
%CPU		-> Cpu 
%MEM		-> memory usses 
TIME+ 		-> how long
COMMAND		-> related command


top -u student	-> show all processes from user student


'''''''''''''''''''''''''''''''''''''''''''''''

top
and on this press f

on new, you can change how it sorts -> press s (sort)


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

ps aux | less

ps aux | grep sshd

ps -ef | less

ps -e -o pid,args --forest | less

ps aux --sort pmem

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

				priority

top

NI (nice command)

press "r" to renice

first enter

second from -20 till 19	# -5	(-20 max priority)	



nice --help

nice -n 5 dd if=/dev/zero of=/dev/null &		# change dd process with priority 5


renice --help

renice -n 5 14053					# renice +5 for process number 14053

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

				Signals

man 7 signal

       SIGHUP        1       Term    Hangup detected on controlling terminal
                                     or death of controlling process

       SIGINT        2       Term    Interrupt from keyboard
       SIGQUIT       3       Core    Quit from keyboard
       SIGILL        4       Core    Illegal Instruction
       SIGABRT       6       Core    Abort signal from abort(3)
       SIGFPE        8       Core    Floating-point exception

       SIGKILL       9       Term    Kill signal

       SIGSEGV      11       Core    Invalid memory reference
       SIGPIPE      13       Term    Broken pipe: write to pipe with no
                                     readers; see pipe(7)
       SIGALRM      14       Term    Timer signal from alarm(2)

       SIGTERM      15       Term    Termination signal

       SIGUSR1   30,10,16    Term    User-defined signal 1
       SIGUSR2   31,12,17    Term    User-defined signal 2
       SIGCHLD   20,17,18    Ign     Child stopped or terminated
       SIGCONT   19,18,25    Cont    Continue if stopped
       SIGSTOP   17,19,23    Stop    Stop process
       SIGTSTP   18,20,24    Stop    Stop typed at terminal
       SIGTTIN   21,21,26    Stop    Terminal input for background process
       SIGTTOU   22,22,27    Stop    Terminal output for background process




top

push "k"

PID to signal/kill [default pid = 1543] # hier you have to write number of process

after signal 9 to kill process, or 15 to kill nicely

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

ps aux | grep dd 

kill 14053

or

killall dd		# kill all dd processes

!dd			# last command with dd 

kill -9 16742		# to kill process

ps aux |grep dd

pidof dd		# show number of process ID

kill $(pidof dd)	# kill proc PID of "name"

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''


































